<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js"></script> 
<script src="https://api.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v1.9.1/mapbox-gl.css" rel="stylesheet" />  
<script src='https://npmcdn.com/csv2geojson@latest/csv2geojson.js'></script>
<script src='https://npmcdn.com/@turf/turf/turf.min.js'></script>
  
<style>
	#body {
      margin: 0;
      padding: 0;
    }
    
    #map {
      position: relative;
      top: 0;
      bottom: 0;
      width: 100%;
      height: 350px;
    }
    
    #fly {
		display: block;
		position: relative;
		margin: -340px auto;
		width: 50%;
		height: 30px;
		padding: 0px;
		border: none;
		border-radius: 6px;
		font-size: 16px;
		text-align: center;
		color: #ffffff;
		background: #ed5b2f;
		}  
        
	.mapboxgl-popup {
      padding-bottom: 5px;
    }
    
    .mapboxgl-popup-close-button {
      display: none;
    }
    
    .mapboxgl-popup-content {
      font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
      padding: 0;
      width: 250px;
    }
    
    .mapboxgl-popup-content-wrapper {
      padding: 1%;
    }
    
    .mapboxgl-popup-content h3 {
      background: rgb(48, 164, 205);
      text-align: center;
      color: #fff;
      margin: 0;
      display: block;
      padding: 5px;
      font-weight: 700;
      margin-top: -5px;
    }
    
    .mapboxgl-popup-content h4 {
      margin: 0;
      display: block;
      padding: 5px 3px 5px 5px;
      font-weight: 400;
    }
    
    .mapboxgl-container {
      cursor: pointer;
    }
    
    .mapboxgl-popup-anchor-top>.mapboxgl-popup-content {
      margin-top: 3px;
    }
    
    .mapboxgl-popup-anchor-top>.mapboxgl-popup-tip {
      border-bottom-color: rgb(61, 59, 59);
    }
    
</style>

<body>
<div id='map'></div>
<button id="fly"> &#10687   Zur aktuellen AIDA Position</button>

<script>
var transformRequest = (url, resourceType) => {
	var isMapboxRequest =
		url.slice(8, 22) === "api.mapbox.com" ||
		url.slice(10, 26) === "tiles.mapbox.com";
				
			return {
				url: isMapboxRequest
				? url.replace("?", "?pluginName=sheetMapper&")
				: url }};
    
mapboxgl.accessToken ='pk.eyJ1IjoiYWxwaW5hNzg3IiwiYSI6ImNrYjVlOGs5czB4bDQzM3Q4MG1oMWh4ZncifQ.ijPmURxkqeuaagsPk1uZsg'; 


var map = new mapboxgl.Map({
	container: 'map', // container id
    style: 'mapbox://styles/mapbox/streets-v11', //stylesheet location
    center: [0.0, 51.55], // starting position
    zoom: 5,// starting zoom
    transformRequest: transformRequest });


$(document).ready(function () {
	$.ajax({
		type:"GET",
        url:'https://docs.google.com/spreadsheets/d/e/2PACX-1vSqQ8NVPFDA9iI_01k3Gp8WKRmpl2843ZWSreTBT_V0u80W0A5aWWVe_W2SJ8WauQXlhOYx7WVv0KOz/pub?gid=0&single=true&output=csv',
       	dataType:"text",
        success: function (csvData) { makeGeoJSON(csvData); }});

    function makeGeoJSON(csvData) {
       	csv2geojson.csv2geojson(csvData, {
        latfield: 'Latitude',
        lonfield: 'Longitude',
        delimiter: ','},
      		
            function (err, data) {
        		document.getElementById('fly').addEventListener('click', function() { 
        			map.on('load', function () {})
					map.loadImage( 'https://img.pngio.com/japangraphic-japan-map-vector-png-clipart-715526-pinclipart-japan-png-880_1248.png',
		function(error, image) {
		if (error) throw error;
		map.addImage('image', image);
		map.addSource('point', {
			'type': 'geojson',
			'data': {
			'type': 'FeatureCollection',
			'features': [
			{
			'type': 'Feature',
			'geometry': {
			'type': 'Point',
			'coordinates': [0, 0]
            }}]}});
             
		map.addLayer({
			'id': 'csvData',
			'type': 'symbol',
			'source': {'type':'geojson','data': data},
			'layout': {
			'icon-image': 'image',
			'icon-size': 0.07 }});})
  


// When a click event occurs on a feature in the csvData layer, open a popup at the
            // location of the feature, with description HTML from its properties.
map.on('click', 'csvData', function (e) {
	var coordinates = e.features[0].geometry.coordinates.slice();

//set popup text 
//You can adjust the values of the popup to match the headers of your CSV. 
// For example: e.features[0].properties.Name is retrieving information from the field Name in the original CSV. 
	var description = '<h3>' + e.features[0].properties.Name + '</h3>' + '<h4>' + '<b>' + 'Letzter Hafen: ' + '</b>' + e.features[0].properties.Von + '</h4>' + '<h4>' + '<b>' + 'NÃ¤chster Hafen: ' + '</b>' + e.features[0].properties.Nach + '</h4>';

// Ensure that if the map is zoomed out such that multiple
// copies of the feature are visible, the popup appears
// over the copy being pointed to.
	while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
		coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;}
  
//add Popup to map
 	new mapboxgl.Popup()
        .setLngLat(coordinates)
        .setHTML(description)
        .addTo(map);
        });

// Change the cursor to a pointer when the mouse is over the places layer.
    map.on('mouseenter', 'csvData', function () {
    map.getCanvas().style.cursor = 'pointer';
    });

// Change it back to a pointer when it leaves.
    map.on('mouseleave', 'places', function () {
    map.getCanvas().style.cursor = '';
    });
    
    
         var bbox = turf.bbox(data);
         map.fitBounds(bbox, { padding: 50, zoom: 7,});
        });
       });
      };
    });
    

  </script>

</body>

</html>
